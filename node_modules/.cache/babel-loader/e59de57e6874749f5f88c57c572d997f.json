{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\naxios.defaults.withCredentials = true;\nimport axios from 'axios';\nvar ip = \"172.25.186.131\";\nimport { ColorPicker } from 'element-ui';\nexport default {\n  name: 'Exam',\n  data: function data() {\n    return {\n      tableData: {\n        id: '',\n        examName: '',\n        date: '',\n        status: ''\n      },\n      ExamlogVisible: false,\n      addExam: {\n        examName: '',\n        description: '',\n        date: '',\n        status: ''\n      },\n      search: '',\n      clearData: [{\n        examName: 'sdsd',\n        classId: '21',\n        className: '1',\n        count: '1',\n        score: '1',\n        total: '1'\n      }],\n      addClass: {\n        classId: '',\n        classNmae: '',\n        school: ''\n      },\n      addClassVisible: false,\n      // options: [],\n      classData: [],\n      // 班级总列表\n      selectArrs: []\n    };\n  },\n  mounted: function mounted() {\n    this.selectAll();\n    this.testlogin();\n  },\n  methods: {\n    sleep: function sleep(n) {\n      var start = new Date().getTime();\n\n      while (true) {\n        if (new Date().getTime() - start > n) {\n          break;\n        }\n      }\n    },\n    testlogin: function testlogin() {\n      var _this = this;\n\n      axios.get(\"http://\" + ip + \"/admin\").then(function (res) {\n        if (res.data.code == 20001) {} else if (res.data.code == 20000) {\n          _this.$message.error(\"请先登录!!!\");\n\n          _this.sleep(1000);\n\n          location.href = \"http://localhost:8084/login\";\n        }\n      });\n    },\n    // 初始化查询\n    selectAll: function selectAll() {\n      var _this2 = this;\n\n      axios.get(\"http://\" + ip + \"/exams\").then(function (res) {\n        _this2.tableData = res.data.data;\n      });\n    },\n    // 添加考试\n    handleaddExam: function handleaddExam() {\n      var _this3 = this;\n\n      axios.post(\"http://\" + ip + \"/exams\", this.addExam).then(function (res) {\n        _this3.ExamlogVisible = false;\n\n        if (res.data.code == 20011) {\n          _this3.$message.success('添加成功');\n\n          _this3.selectAll();\n        } else if (res.data.code == 20010) {\n          _this3.$message.error('添加失败');\n        }\n\n        _this3.addExam.examName = '', _this3.addExam.description = '', _this3.addExam.date = '', _this3.addExam.status = '';\n      });\n    },\n    // 查询考试的详细数据\n    selectClearData: function selectClearData(row) {\n      var _this4 = this;\n\n      axios.get(\"http://\" + ip + \"/texam/\" + row.id).then(function (res) {\n        _this4.clearData = res.data.data;\n      });\n    },\n    //查询班级信息\n    getClassData: function getClassData(row) {\n      var _this5 = this;\n\n      this.classData = [];\n      var cou = 0;\n      axios.get(\"http://\" + ip + \"/class\").then(function (res) {\n        for (var x = 0; x < res.data.data.length; x++) {\n          for (var y = 0; y < _this5.classData.length; y++) {\n            if (res.data.data[x].school === _this5.classData[y].label) {\n              _this5.classData[y].children.push({\n                value: res.data.data[x].classId,\n                disabled: false,\n                label: res.data.data[x].className\n              });\n\n              cou += 1;\n            }\n          }\n\n          if (cou == 0) {\n            _this5.classData.push({\n              value: x,\n              label: res.data.data[x].school,\n              children: [{\n                value: res.data.data[x].classId,\n                label: res.data.data[x].className\n              }]\n            });\n          }\n\n          cou = 0;\n        }\n      });\n      axios.get(\"http://\" + ip + \"/texam/\" + row.id).then(function (res) {\n        for (var index = 0; index < res.data.data.length; index++) {\n          for (var x = 0; x < _this5.classData.length; x++) {\n            var k = 0;\n\n            for (var y = 0; y < _this5.classData[x].children.length; y++) {\n              if (res.data.data[index].classId == _this5.classData[x].children[y].value) {\n                _this5.classData[x].children[y].disabled = true;\n                k += 1;\n                break;\n              }\n            }\n\n            ;\n            if (k == 1) break;\n          }\n\n          ;\n        }\n\n        ;\n      });\n      this.selectArrs = [];\n      this.selectArrs.push(row.id);\n    },\n    //获取选中的节点数据对象\n    changeSelectArr: function changeSelectArr(val) {\n      var node_arr = this.$refs['cascader'].getCheckedNodes();\n      var select_a = [];\n      select_a.push(this.selectArrs[0]);\n\n      for (var key in node_arr) {\n        if (!node_arr[key]['data'].children) {\n          select_a.push(node_arr[key]['data'].value);\n        }\n      }\n\n      this.selectArrs = select_a;\n    },\n    //添加班级\n    addClassExam: function addClassExam() {\n      var _this6 = this;\n\n      axios.post(\"http://\" + ip + \"/texam/\", this.selectArrs).then(function (res) {\n        if (res.data.code == 20011) {\n          _this6.$message.success('添加成功');\n\n          _this6.selectAll();\n        } else if (res.data.code == 20010) {\n          _this6.$message.error('添加失败');\n        }\n      });\n      this.addClassVisible = false;\n    },\n    cancelClassExam: function cancelClassExam() {\n      console.log(this.$refs['cascader']);\n      this.$refs['cascader'].panel.clearCheckedNodes();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6FAA;AACA;AACA;AACA;AACA;EACAC,YADA;EAEAC,IAFA,kBAEA;IACA;MACAC;QACAC,MADA;QAEAC,YAFA;QAGAC,QAHA;QAIAC;MAJA,CADA;MAOAC,qBAPA;MAQAC;QACAJ,YADA;QAEAK,eAFA;QAGAJ,QAHA;QAIAC;MAJA,CARA;MAcAI,UAdA;MAeAC;QACAP,gBADA;QAEAQ,aAFA;QAGAC,cAHA;QAIAC,UAJA;QAKAC,UALA;QAMAC;MANA,EAfA;MAuBAC;QACAL,WADA;QAEAM,aAFA;QAGAC;MAHA,CAvBA;MA4BAC,sBA5BA;MA6BA;MACAC,aA9BA;MA8BA;MACAC;IA/BA;EAiCA,CApCA;EAuCAC,OAvCA,qBAuCA;IACA;IACA;EACA,CA1CA;EA2CAC;IACAC,KADA,iBACAC,CADA,EACA;MACA;;MACA;QACA;UACA;QACA;MACA;IAEA,CATA;IAWAC,SAXA,uBAWA;MAAA;;MAEA5B;QAEA,6BAIA,CAJA,MAIA;UAEA;;UAEA;;UAIA6B;QACA;MAEA,CAjBA;IAkBA,CA/BA;IAmCA;IACAC,SApCA,uBAoCA;MAAA;;MACA9B;QACA;MACA,CAFA;IAGA,CAxCA;IAyCA;IACA+B,aA1CA,2BA0CA;MAAA;;MAEA/B;QACA;;QACA;UACA;;UACA;QACA,CAHA,MAGA;UACA;QACA;;QACA,8BACA,+BADA,EAEA,wBAFA,EAGA,0BAHA;MAIA,CAZA;IAaA,CAzDA;IA0DA;IACAgC,eA3DA,2BA2DAC,GA3DA,EA2DA;MAAA;;MAEAjC;QACA;MACA,CAFA;IAGA,CAhEA;IAiEA;IACAkC,YAlEA,wBAkEAD,GAlEA,EAkEA;MAAA;;MACA;MACA;MACAjC;QACA;UACA;YACA;cACA;gBACAmC,+BADA;gBAEAC,eAFA;gBAGAC;cAHA;;cAKAC;YACA;UACA;;UACA;YACA;cACAH,QADA;cAEAE,8BAFA;cAGAE;gBACAJ,+BADA;gBAEAE;cAFA;YAHA;UAQA;;UACAC;QACA;MACA,CAxBA;MAyBAtC;QACA;UACA;YACA;;YACA;cACA;gBACA;gBACAwC;gBACA;cACA;YACA;;YAAA;YACA,YACA;UACA;;UAAA;QACA;;QAAA;MACA,CAfA;MAgBA;MACA;IAEA,CAjHA;IAkHA;IACAC,eAnHA,2BAmHAC,GAnHA,EAmHA;MACA;MACA;MACAC;;MACA;QACA;UACAA;QACA;MACA;;MACA;IACA,CA7HA;IA8HA;IACAC,YA/HA,0BA+HA;MAAA;;MACA5C;QACA;UACA;;UACA;QACA,CAHA,MAGA;UACA;QACA;MAEA,CARA;MASA;IACA,CA1IA;IA2IA6C,eA3IA,6BA2IA;MACAC;MACA;IACA;EA9IA;AA3CA","names":["axios","name","data","tableData","id","examName","date","status","ExamlogVisible","addExam","description","search","clearData","classId","className","count","score","total","addClass","classNmae","school","addClassVisible","classData","selectArrs","mounted","methods","sleep","n","testlogin","location","selectAll","handleaddExam","selectClearData","row","getClassData","value","disabled","label","cou","children","k","changeSelectArr","val","select_a","addClassExam","cancelClassExam","console"],"sourceRoot":"views/exam","sources":["index.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <br>\r\n    <el-row>\r\n\r\n      <el-button type=\"primary\" @click=\"ExamlogVisible = true\" round>新增考试</el-button>\r\n      <el-button type=\"danger\" @click=\"deleteByIds\" round>批量删除</el-button>\r\n    </el-row>\r\n    <br>\r\n    <el-table :data=\"tableData.filter(data => !search || data.name.toLowerCase().includes(search.toLowerCase()))\"\r\n      style=\"width: 100%\" max-height=\"400\">\r\n\r\n      <el-table-column label=\"序号\" type=\"index\">\r\n      </el-table-column>\r\n\r\n      <el-table-column label=\"名称\" prop=\"examName\" header-align=\"center\" align=\"center\">\r\n      </el-table-column>\r\n      <el-table-column label=\"日期\" prop=\"date\" header-align=\"center\" align=\"center\">\r\n      </el-table-column>\r\n      <el-table-column label=\"状态\" prop=\"status\" header-align=\"center\" align=\"center\">\r\n\r\n      </el-table-column>\r\n      <el-table-column align=\"right\">\r\n        <template slot=\"header\">\r\n          <el-input v-model=\"search\" size=\"mini\" placeholder=\"输入关键字搜索\" />\r\n        </template>\r\n\r\n        <template slot-scope=\"scope\">\r\n          <el-button type=\"primary\" size=\"mini\" @click=\"selectClearData(scope.row)\">考试详情</el-button>\r\n          <el-button size=\"mini\" @click=\"addClassVisible = true; getClassData(scope.row)\">添加班级</el-button>\r\n          <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.$index, scope.row)\">Delete</el-button>\r\n        </template>\r\n      </el-table-column>\r\n\r\n    </el-table>\r\n    <!--    新增窗口-->\r\n    <el-dialog title=\"新增考试\" :visible.sync=\"ExamlogVisible\" width=\"18%\">\r\n\r\n      <el-form ref=\"form\" :model=\"addExam\" label-width=\"40px\" style=\"text-align: center\">\r\n        <el-form-item label=\"名称\">\r\n          <el-input v-model=\"addExam.examName\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"描述\">\r\n          <el-input v-model=\"addExam.description\" placeholder=\"请输入内容\"></el-input>\r\n        </el-form-item>\r\n        <el-form>\r\n          <div class=\"block\">\r\n            <span class=\"demonstration\">默认</span>\r\n            <el-date-picker v-model=\"addExam.date\" type=\"date\" placeholder=\"选择日期\">\r\n            </el-date-picker>\r\n          </div>\r\n        </el-form>\r\n        <el-form-item label=\"\">\r\n          <el-switch v-model=\"addExam.status\" active-text=\"立即开启\" inactive-text=\"稍后开启\">\r\n          </el-switch>\r\n        </el-form-item>\r\n        <el-button type=\"primary\" @click=\"handleaddExam\">提交</el-button>\r\n        <el-button @click=\"ExamlogVisible = false\">取消</el-button>\r\n      </el-form>\r\n\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n\r\n      </span>\r\n    </el-dialog>\r\n    <!-- 考试详情 -->\r\n    <template>\r\n      <el-table :data=\"clearData\" style=\"width: 100%\" max-height=\"300\">\r\n        <el-table-column label=\"序号\" type=\"index\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"className\" label=\"班级名称\" width=\"180\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"count\" label=\"已填写人数\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"score\" label=\"分数\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"total\" label=\"总人数\">\r\n        </el-table-column>\r\n      </el-table>\r\n    </template>\r\n    <!-- 新增班级 -->\r\n    <el-dialog title=\"新增班级\" :visible.sync=\"addClassVisible\" width=\"18%\">\r\n      <el-cascader placeholder=\"试试搜索：班级\" ref=\"cascader\" @change=\"changeSelectArr\" :options=\"classData\"\r\n        :props=\"{ multiple: true }\" filterable></el-cascader>\r\n      <el-button type=\"primary\" @click=\"addClassExam()\">提交</el-button>\r\n      <el-button @click=\"addClassVisible = false; cancelClassExam(val)\">取消</el-button>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\naxios.defaults.withCredentials = true;\r\nimport axios from 'axios';\r\nconst ip = \"172.25.186.131\";\r\nimport { ColorPicker } from 'element-ui';\r\nexport default {\r\n  name: 'Exam',\r\n  data() {\r\n    return {\r\n      tableData: {\r\n        id: '',\r\n        examName: '',\r\n        date: '',\r\n        status: ''\r\n      },\r\n      ExamlogVisible: false,\r\n      addExam: {\r\n        examName: '',\r\n        description: '',\r\n        date: '',\r\n        status: '',\r\n      },\r\n      search: '',\r\n      clearData: [{\r\n        examName: 'sdsd',\r\n        classId: '21',\r\n        className: '1',\r\n        count: '1',\r\n        score: '1',\r\n        total: '1'\r\n      }],\r\n      addClass: {\r\n        classId: '',\r\n        classNmae: '',\r\n        school: '',\r\n      },\r\n      addClassVisible: false,\r\n      // options: [],\r\n      classData: [], // 班级总列表\r\n      selectArrs: [],\r\n    }\r\n  },\r\n\r\n\r\n  mounted() {\r\n    this.selectAll();\r\n    this.testlogin();\r\n  },\r\n  methods: {\r\n    sleep(n) {\r\n      var start = new Date().getTime();\r\n      while (true) {\r\n        if (new Date().getTime() - start > n) {\r\n          break;\r\n        }\r\n      }\r\n\r\n    },\r\n\r\n    testlogin() {\r\n\r\n      axios.get(\"http://\" + ip + \"/admin\").then(res => {\r\n\r\n        if (res.data.code == 20001) {\r\n\r\n\r\n\r\n        } else if (res.data.code == 20000) {\r\n\r\n          this.$message.error(\"请先登录!!!\");\r\n\r\n          this.sleep(1000);\r\n\r\n\r\n\r\n          location.href = \"http://localhost:8084/login\"\r\n        }\r\n\r\n      })\r\n    },\r\n\r\n\r\n\r\n    // 初始化查询\r\n    selectAll() {\r\n      axios.get(\"http://\" + ip + \"/exams\").then(res => {\r\n        this.tableData = res.data.data;\r\n      })\r\n    },\r\n    // 添加考试\r\n    handleaddExam() {\r\n\r\n      axios.post(\"http://\" + ip + \"/exams\", this.addExam).then(res => {\r\n        this.ExamlogVisible = false;\r\n        if (res.data.code == 20011) {\r\n          this.$message.success('添加成功');\r\n          this.selectAll();\r\n        } else if (res.data.code == 20010) {\r\n          this.$message.error('添加失败');\r\n        }\r\n        this.addExam.examName = '',\r\n          this.addExam.description = '',\r\n          this.addExam.date = '',\r\n          this.addExam.status = ''\r\n      })\r\n    },\r\n    // 查询考试的详细数据\r\n    selectClearData(row) {\r\n\r\n      axios.get(\"http://\" + ip + \"/texam/\" + row.id).then(res => {\r\n        this.clearData = res.data.data;\r\n      })\r\n    },\r\n    //查询班级信息\r\n    getClassData(row) {\r\n      this.classData = []\r\n      let cou = 0\r\n      axios.get(\"http://\" + ip + \"/class\").then(res => {\r\n        for (let x = 0; x < res.data.data.length; x++) {\r\n          for (let y = 0; y < this.classData.length; y++) {\r\n            if (res.data.data[x].school === this.classData[y].label) {\r\n              this.classData[y].children.push({\r\n                value: res.data.data[x].classId,\r\n                disabled: false,\r\n                label: res.data.data[x].className\r\n              });\r\n              cou += 1\r\n            }\r\n          }\r\n          if (cou == 0) {\r\n            this.classData.push({\r\n              value: x,\r\n              label: res.data.data[x].school,\r\n              children: [{\r\n                value: res.data.data[x].classId,\r\n                label: res.data.data[x].className\r\n              }]\r\n            })\r\n          }\r\n          cou = 0\r\n        }\r\n      })\r\n      axios.get(\"http://\" + ip + \"/texam/\" + row.id).then(res => {\r\n        for (let index = 0; index < res.data.data.length; index++) {\r\n          for (let x = 0; x < this.classData.length; x++) {\r\n            let k = 0;\r\n            for (let y = 0; y < this.classData[x].children.length; y++) {\r\n              if (res.data.data[index].classId == this.classData[x].children[y].value) {\r\n                this.classData[x].children[y].disabled = true\r\n                k += 1\r\n                break\r\n              }\r\n            };\r\n            if (k == 1)\r\n              break\r\n          };\r\n        };\r\n      })\r\n      this.selectArrs = []\r\n      this.selectArrs.push(row.id)\r\n\r\n    },\r\n    //获取选中的节点数据对象\r\n    changeSelectArr(val) {\r\n      let node_arr = this.$refs['cascader'].getCheckedNodes();\r\n      let select_a = [];\r\n      select_a.push(this.selectArrs[0])\r\n      for (let key in node_arr) {\r\n        if (!node_arr[key]['data'].children) {\r\n          select_a.push(node_arr[key]['data'].value)\r\n        }\r\n      }\r\n      this.selectArrs = select_a\r\n    },\r\n    //添加班级\r\n    addClassExam() {\r\n      axios.post(\"http://\" + ip + \"/texam/\", this.selectArrs).then(res => {\r\n        if (res.data.code == 20011) {\r\n          this.$message.success('添加成功');\r\n          this.selectAll();\r\n        } else if (res.data.code == 20010) {\r\n          this.$message.error('添加失败');\r\n        }\r\n\r\n      })\r\n      this.addClassVisible = false;\r\n    },\r\n    cancelClassExam() {\r\n      console.log(this.$refs['cascader'])\r\n      this.$refs['cascader'].panel.clearCheckedNodes();\r\n    },\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n</script>\r\n\r\n<style>\r\n.el-table .warning-row {\r\n  background: oldlace;\r\n}\r\n\r\n.el-table .success-row {\r\n  background: #f0f9eb;\r\n}\r\n</style>\r\n\r\n"]},"metadata":{},"sourceType":"module"}